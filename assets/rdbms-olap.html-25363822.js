import{_ as a,a as s}from"./column-oriented-7b3a134c.js";import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o,c as i,d as r,a as e,f as t}from"./app-f02742c9.js";const l={},d=e("p",null,"Imaginemos por un momento que tenemos la dificil tarea de disponibilizar métricas de efectividad de un nuevo feature desplegado. Dimensionemos (imaginando) la magnitud de la solución: supongamos a modo de ejemplo 1 millon de usuarios diarios, a los cuales a un X porcentaje le exponemos la nueva funcionalidad, y con la cual se interacciona al menos 4 veces durante la sesion diaria. Si nuestro test A/B determina una distribución 50/50, una de las mitades no logueará ninguna actividad mientras que de la otra al menos obtendremos 4 registros al dia, ergo 60M de logs al mes.",-1),c=e("p",null,"Al finalizar el periodo de nuestro experimento, supongamos luego de 3 meses, estaremos procesando 180M de filas. Tarea no despreciable.",-1),u=t('<h2 id="rdbms-vs-olap" tabindex="-1"><a class="header-anchor" href="#rdbms-vs-olap" aria-hidden="true">#</a> RDBMS vs OLAP</h2><p>Las bases de datos relacionales (RDBMS) están diseñadas para el procesamiento de transacciones, que es el conjunto de operaciones (INSERT, UPDATE, DELETE, SELECT) que se realizan para completar una acción o híto en el negocio. Las RDBMS son muy eficientes en el procesamiento de transacciones, pero no están optimizadas para el análisis de grandes volúmenes de datos.</p><p>Como subconjunto de las Base de Datos Transaccionales (TDD por sus siglas en inglés - Transacional Due Diligense), las RDBMS ofrecen:</p><ul><li>Transacciones ACID: Una transacción es un grupo de operaciones de lectura y escritura en una base de datos que solo tiene éxito si todas las operaciones dentro de ella tienen éxito. Las transacciones pueden afectar a un solo registro o a varios registros. Las TDD garantizan que las transacciones se completen de manera consistente, incluso si se producen errores. <ul><li>Atomicidad</li><li>Consistencia</li><li>Aislamiento</li><li>Durabilidad</li></ul></li><li>El inconveniente de utilizar una transacción es que la base de datos tiene que &quot;bloquear&quot; los recursos involucrados para evitar que las escrituras concurrentes interfieran entre sí. Esto significa que otros clientes que intenten escribir datos podrían quedarse esperando a que la transacción se complete, lo que afectaría a la latencia de la aplicación y, en última instancia, a la experiencia del usuario.</li><li>Integridad referencial: las TDD permiten establecer relaciones entre tablas, lo que ayuda a garantizar la integridad de los datos. Esto es importante para aplicaciones que requieren datos consistentes.</li><li>Eficiencia para el procesamiento de transacciones: están optimizadas para operar transacciones. Esto es importante para aplicaciones que requieren un alto rendimiento transaccional.</li></ul><h2 id="column-oriented-vs-row-oriented" tabindex="-1"><a class="header-anchor" href="#column-oriented-vs-row-oriented" aria-hidden="true">#</a> Column-Oriented vs Row-Oriented</h2><ul><li>En un sistema de gestión de bases de datos orientado a filas, todos los datos de una fila se almacenan físicamente uno al lado del otro. <img src="'+a+'" alt="row-oriented.gif" loading="lazy"></li><li>En un sistema de gestión de bases de datos orientado a columnas, todos los valores de una columna son almacenados de manera contigua. <img src="'+s+'" alt="column-oriented.gif" loading="lazy"></li></ul><h3 id="wip" tabindex="-1"><a class="header-anchor" href="#wip" aria-hidden="true">#</a> [WIP]</h3>',7);function m(p,g){return o(),i("div",null,[d,c,r(" more "),u])}const b=n(l,[["render",m],["__file","rdbms-olap.html.vue"]]);export{b as default};
